breaks = c(0, 1, 2, 4, 6, 8)) +
grattan_colour_manual() +
labs(title = "Under all tested scenarios, a fleetwide standard has a BCR above 1",
subtitle = "Cost of abatement ($/t CO2) of implementing a fleetwide standard")
all_results %>%
mutate(run_type = factor(run_type, levels = all_results %>%
filter(target_type == "central",
scenario == "discount_7_perc",
co2_value == 0) %>%
arrange(desc(bcr)) %>%
pull(run_type) %>%
unique())) %>%
filter(scenario == "discount_7_perc",
co2_value == 0) %>%
ggplot() +
geom_point(aes(x = run_type,
y = bcr,
colour = target_type,
size = emissions_savings)) +
geom_hline(yintercept = 1,
colour = grattan_grey4,
size = 0.8,
linetype = "dashed",
alpha = 0.8) +
scale_size(range = c(3, 7)) +
coord_flip() +
theme_grattan(legend = "top") +
scale_y_continuous_grattan(limits = c(0, 8),
breaks = c(0, 1, 2, 4, 6, 8)) +
grattan_colour_manual() +
labs(title = "Under all tested scenarios, a fleetwide standard has a BCR above 1",
subtitle = "Cost of abatement ($/t CO2) of implementing a fleetwide standard")
all_results %>%
mutate(run_type = factor(run_type, levels = all_results %>%
filter(target_type == "central",
scenario == "discount_7_perc",
co2_value == 20) %>%
arrange(desc(bcr)) %>%
pull(run_type) %>%
unique())) %>%
filter(scenario == "discount_7_perc",
co2_value == 0) %>%
ggplot() +
geom_point(aes(x = run_type,
y = bcr,
colour = target_type,
size = emissions_savings)) +
geom_hline(yintercept = 1,
colour = grattan_grey4,
size = 0.8,
linetype = "dashed",
alpha = 0.8) +
scale_size(range = c(3, 7)) +
coord_flip() +
theme_grattan(legend = "top") +
scale_y_continuous_grattan(limits = c(0, 8),
breaks = c(0, 1, 2, 4, 6, 8)) +
grattan_colour_manual() +
labs(title = "Under all tested scenarios, a fleetwide standard has a BCR above 1",
subtitle = "Cost of abatement ($/t CO2) of implementing a fleetwide standard")
all_results %>%
mutate(run_type = factor(run_type, levels = all_results %>%
filter(target_type == "central",
scenario == "discount_7_perc",
co2_value == 0) %>%
arrange(desc(bcr)) %>%
pull(run_type) %>%
unique())) %>%
filter(scenario == "discount_7_perc",
co2_value == 0) %>%
ggplot() +
geom_point(aes(x = run_type,
y = bcr,
colour = target_type,
size = emissions_savings)) +
geom_hline(yintercept = 1,
colour = grattan_grey4,
size = 0.8,
linetype = "dashed",
alpha = 0.8) +
scale_size(range = c(3, 7)) +
coord_flip() +
theme_grattan(legend = "top") +
scale_y_continuous_grattan(limits = c(0, 8),
breaks = c(0, 1, 2, 4, 6, 8)) +
grattan_colour_manual() +
labs(title = "Under all tested scenarios, a fleetwide standard has a BCR above 1",
subtitle = "Cost of abatement ($/t CO2) of implementing a fleetwide standard")
all_results %>%
mutate(run_type = factor(run_type, levels = all_results %>%
filter(target_type == "central",
scenario == "discount_7_perc",
co2_value == 20) %>%
arrange(desc(bcr)) %>%
pull(run_type) %>%
unique())) %>%
filter(scenario == "discount_7_perc",
co2_value == 0) %>%
ggplot() +
geom_point(aes(x = run_type,
y = bcr,
colour = target_type,
size = emissions_savings)) +
geom_hline(yintercept = 1,
colour = grattan_grey4,
size = 0.8,
linetype = "dashed",
alpha = 0.8) +
scale_size(range = c(3, 7)) +
coord_flip() +
theme_grattan(legend = "top") +
scale_y_continuous_grattan(limits = c(0, 8),
breaks = c(0, 1, 2, 4, 6, 8)) +
grattan_colour_manual() +
labs(title = "Under all tested scenarios, a fleetwide standard has a BCR above 1",
subtitle = "Cost of abatement ($/t CO2) of implementing a fleetwide standard")
all_results %>%
mutate(run_type = factor(run_type, levels = all_results %>%
filter(target_type == "central",
scenario == "discount_7_perc",
co2_value == 0) %>%
arrange(desc(bcr)) %>%
pull(run_type) %>%
unique())) %>%
filter(scenario == "discount_7_perc",
co2_value == 0) %>%
ggplot() +
geom_point(aes(x = run_type,
y = bcr,
colour = target_type,
size = emissions_savings)) +
geom_hline(yintercept = 1,
colour = grattan_grey4,
size = 0.8,
linetype = "dashed",
alpha = 0.8) +
scale_size(range = c(3, 7)) +
coord_flip() +
theme_grattan(legend = "top") +
scale_y_continuous_grattan(limits = c(0, 8),
breaks = c(0, 1, 2, 4, 6, 8)) +
grattan_colour_manual() +
labs(title = "Under all tested scenarios, a fleetwide standard has a BCR above 1",
subtitle = "Cost of abatement ($/t CO2) of implementing a fleetwide standard")
all_results %>%
mutate(run_type = factor(run_type, levels = all_results %>%
filter(target_type == "central",
scenario == "discount_7_perc",
co2_value == 0) %>%
arrange(desc(bcr)) %>%
pull(run_type) %>%
unique())) %>%
filter(scenario == "discount_7_perc",
co2_value == 20) %>%
ggplot() +
geom_point(aes(x = run_type,
y = bcr,
colour = target_type,
size = emissions_savings)) +
geom_hline(yintercept = 1,
colour = grattan_grey4,
size = 0.8,
linetype = "dashed",
alpha = 0.8) +
scale_size(range = c(3, 7)) +
coord_flip() +
theme_grattan(legend = "top") +
scale_y_continuous_grattan(limits = c(0, 8),
breaks = c(0, 1, 2, 4, 6, 8)) +
grattan_colour_manual() +
labs(title = "Under all tested scenarios, a fleetwide standard has a BCR above 1",
subtitle = "Cost of abatement ($/t CO2) of implementing a fleetwide standard")
all_results %>%
mutate(run_type = factor(run_type, levels = all_results %>%
filter(target_type == "central",
scenario == "discount_7_perc",
co2_value == 0) %>%
arrange(desc(bcr)) %>%
pull(run_type) %>%
unique())) %>%
filter(scenario == "discount_7_perc",
co2_value == 35) %>%
ggplot() +
geom_point(aes(x = run_type,
y = bcr,
colour = target_type,
size = emissions_savings)) +
geom_hline(yintercept = 1,
colour = grattan_grey4,
size = 0.8,
linetype = "dashed",
alpha = 0.8) +
scale_size(range = c(3, 7)) +
coord_flip() +
theme_grattan(legend = "top") +
scale_y_continuous_grattan(limits = c(0, 8),
breaks = c(0, 1, 2, 4, 6, 8)) +
grattan_colour_manual() +
labs(title = "Under all tested scenarios, a fleetwide standard has a BCR above 1",
subtitle = "Cost of abatement ($/t CO2) of implementing a fleetwide standard")
all_results %>%
mutate(run_type = factor(run_type, levels = all_results %>%
filter(target_type == "central",
scenario == "discount_7_perc",
co2_value == 0) %>%
arrange(desc(bcr)) %>%
pull(run_type) %>%
unique())) %>%
filter(scenario == "discount_7_perc",
co2_value == 0) %>%
ggplot() +
geom_point(aes(x = run_type,
y = bcr,
colour = target_type,
size = emissions_savings)) +
geom_hline(yintercept = 1,
colour = grattan_grey4,
size = 0.8,
linetype = "dashed",
alpha = 0.8) +
scale_size(range = c(3, 7)) +
coord_flip() +
theme_grattan(legend = "top") +
scale_y_continuous_grattan(limits = c(0, 8),
breaks = c(0, 1, 2, 4, 6, 8)) +
grattan_colour_manual() +
labs(title = "Under all tested scenarios, a fleetwide standard has a BCR above 1",
subtitle = "Cost of abatement ($/t CO2) of implementing a fleetwide standard")
fuel_prices
fuel_prices %>% view()
0.7082113/0.9671010
1-
0.7323033
0.9671010 * 0.99
1.0080512 * 0.99
1.0080512 * 1.01
fuel_pricws
fuel_prices
?koin
?join
electricity_prices
?str_sub
energy_consumption
?benefit_model
check()
document()
check()
km_travelled
devtools::load_all()
library(fleeteffSim)
library(ggplot2)
library(grattantheme)
library(magrittr)
library(dplyr)
km_travelled %>%
ggplot() +
geom_line(aes(x = age, y = km_travelled, colour = vehicle_type))
km_travelled %>%
ggplot() +
geom_point(aes(x = age, y = km_travelled, colour = vehicle_type))
km_travelled %>%
ggplot() +
geom_line(aes(x = age, y = km_travelled, colour = vehicle_type)) +
scale_x_continuous_grattan(limits = c(0, 18))
km_travelled %>%
ggplot() +
geom_line(aes(x = age, y = km_travelled, colour = vehicle_type)) +
scale_x_continuous_grattan(limits = c(0, 17))
km_travelled %>%
ggplot() +
geom_line(aes(x = age, y = km_travelled, colour = vehicle_type,
alpha = 0.8)) +
scale_x_continuous_grattan(limits = c(0, 17)) +
theme_grattan() +
km_travelled %>%
ggplot() +
geom_line(aes(x = age, y = km_travelled, colour = vehicle_type,
alpha = 0.8)) +
scale_x_continuous_grattan(limits = c(0, 17)) +
theme_grattan() +
labs()
km_travelled %>%
ggplot() +
geom_line(aes(x = age, y = km_travelled, colour = vehicle_type,
alpha = 0.8)) +
scale_x_continuous_grattan(limits = c(0, 17)) +
theme_grattan() +
labs(title = "The assumed distance driven by vehicle type and age",
x = "Vehicle age",
y = "Yearly km driven")
km_travelled %>%
ggplot() +
geom_line(aes(x = age, y = km_travelled, colour = vehicle_type,
alpha = 0.8)) +
scale_x_continuous_grattan(limits = c(0, 17)) +
theme_grattan() +
labs(title = "The assumed distance driven by vehicle type and age",
subtitle = "Yearly km driven"
x = "Vehicle age",
km_travelled %>%
ggplot() +
geom_line(aes(x = age, y = km_travelled, colour = vehicle_type,
alpha = 0.8)) +
scale_x_continuous_grattan(limits = c(0, 17)) +
theme_grattan(legend = "top") +
labs(title = "The assumed distance driven by vehicle type and age",
subtitle = "Yearly km driven",
x = "Vehicle age",
y = "Yearly km driven")
km_travelled %>%
ggplot() +
geom_line(aes(x = age, y = km_travelled, colour = vehicle_type,
alpha = 0.8)) +
scale_x_continuous_grattan(limits = c(0, 17)) +
theme_grattan(legend = "top") +
labs(title = "The assumed distance driven by vehicle type and age",
subtitle = "Yearly km driven",
x = "Vehicle age",
y = "Yearly km driven") +
grattan_colour_manual()
km_travelled %>%
ggplot() +
geom_line(aes(x = age, y = km_travelled, colour = vehicle_type)) +
scale_x_continuous_grattan(limits = c(0, 17)) +
theme_grattan(legend = "top") +
labs(title = "The assumed distance driven by vehicle type and age",
subtitle = "Yearly km driven",
x = "Vehicle age",
y = "Yearly km driven") +
grattan_colour_manual()
km_travelled %>%
ggplot() +
geom_line(aes(x = age, y = km_travelled, colour = vehicle_type)) +
scale_x_continuous_grattan(limits = c(0, 17)) +
theme_grattan(legend = "top") +
labs(title = "The assumed distance driven by vehicle type and age",
subtitle = "Yearly km driven",
x = "Vehicle age",
y = "Yearly km driven",
caption = "Note that because distance is assumed equal for passenger and SVU types, the lines are on top of each other and therefore not both visible") +
grattan_colour_manual()
targets_and_bau
targets_and_bau %>%
filter(tagret_type == "bau") %>%
ggplot() +
geom_line(aes(x = year, y = value))
targets_and_bau %>%
filter(target_type == "bau") %>%
ggplot() +
geom_line(aes(x = year, y = value))
targets_and_bau %>%
filter(target_type == "bau") %>%
ggplot() +
geom_line(aes(x = year, y = value)) +
theme_grattan() +
labs(title = "The assumed emissions trajectory under business as usual",
subtitle = "Average emissions of new vehicle sales (CO2g/km) over time",
x = "Year")
r, eval=FALSE, include=TRUE
eval=TRUE
include=FALSE
devtools::load_all()
eval=FALSE
include=TRUE
library(fleetEffSim)
library(ggplot2)
library(grattantheme)
library(magrittr)
library(dplyr)
check()
?use_package
use_package(ggplot2)
use_package("ggplot2")
use_package("grattantheme")
?library
check()
?::
?load_all
document()
check()
check()
?load_all()
devtools::load_all()
check()
use_package(devtools)
use_package("devtools")
check()
?markdown
use_package("markdown")
check()
energy_intensity <- read_xlsx("data-raw/AEMO/emissions-intensity-grid.xlsx",
sheet = "step_change") %>%
clean_names() %>%
complete(year = (2051:2060)) %>%
arrange(year) %>%
na.locf()
# filename
# by Lachlan Fox, Grattan Institute
# SET UP =======================================================================
# Packages ---------------------------------------------------------------------
library(tidyverse)
library(lubridate)
library(scales)
library(purrr)
library(glue)
library(fst)
library(janitor)
library(grattantheme)
library(spatstat)
library(ggtext)
library(zoo)
library(readxl)
# Project functions ------------------------------------------------------------
`%nin%` <- Negate(`%in%`)
# READ DATA  ===================================================================
# CLEAN and ANALYSE ============================================================
# PLOTS ========================================================================
energy_intensity <- read_xlsx("data-raw/AEMO/emissions-intensity-grid.xlsx",
sheet = "step_change") %>%
clean_names() %>%
complete(year = (2051:2060)) %>%
arrange(year) %>%
na.locf()
energy_intensity <- read_xlsx("data-raw/external-data/AEMO/emissions-intensity-grid.xlsx",
sheet = "step_change") %>%
clean_names() %>%
complete(year = (2051:2060)) %>%
arrange(year) %>%
na.locf()
energy_intensity <- read_xlsx("data-raw/external_data/AEMO/emissions-intensity-grid.xlsx,
sheet = "step_change") %>%
clean_names() %>%
complete(year = (2051:2060)) %>%
arrange(year) %>%
na.locf()
write_rds(energy_intensity, "data-raw/model_data/final-data/energy_intensity.rds")
energy_intensity <- read_xlsx("data-raw/external_data/AEMO/emissions-intensity-grid.xlsx",
sheet = "step_change") %>%
clean_names() %>%
complete(year = (2051:2060)) %>%
arrange(year) %>%
na.locf()
View(energy_intensity)
energy_intensity <- read_xlsx("data-raw/external_data/AEMO/emissions-intensity-grid.xlsx",
sheet = "step_change") %>%
clean_names() %>%
sleect(-old) %>%
complete(year = (2051:2060)) %>%
arrange(year) %>%
na.locf()
energy_intensity <- read_xlsx("data-raw/external_data/AEMO/emissions-intensity-grid.xlsx",
sheet = "step_change") %>%
clean_names() %>%
select(-old) %>%
complete(year = (2051:2060)) %>%
arrange(year) %>%
na.locf()
View(energy_intensity)
write_rds(energy_intensity, "data-raw/model_data/final-data/energy_intensity.rds")
#script to import all required data for model
library(readr)
library(readxl)
#data for the cost model
cost_curves <- read_rds("data-raw/model_data/final-data/cost_curves.rds")
targets_and_bau <- read_rds("data-raw/model_data/final-data/targets_and_bau.rds")
fuel_prices <- read_rds("data-raw/model_data/final-data/fuel-forecasts.rds")
electricity_prices <- read_rds("data-raw/model_data/final-data/energy_price_forecast.rds")
energy_consumption <- read_rds("data-raw/model_data/final-data/ev_energy_consumption.rds")
energy_intensity <- read_rds("data-raw/model_data/final-data/energy_intensity.rds")
km_travelled <- read_rds("data-raw/model_data/final-data/km_traveled.rds")
fleet <- fleet_creator(.i_cars = 100)
usethis::use_data(
cost_curves,
targets_and_bau,
fuel_prices,
electricity_prices,
energy_consumption,
energy_intensity,
km_travelled,
fleet,
internal = FALSE,
overwrite = TRUE)
load-all()
library(dev_tools)
library(devtools)
load_all()
#script to import all required data for model
library(readr)
library(readxl)
#data for the cost model
cost_curves <- read_rds("data-raw/model_data/final-data/cost_curves.rds")
targets_and_bau <- read_rds("data-raw/model_data/final-data/targets_and_bau.rds")
fuel_prices <- read_rds("data-raw/model_data/final-data/fuel-forecasts.rds")
electricity_prices <- read_rds("data-raw/model_data/final-data/energy_price_forecast.rds")
energy_consumption <- read_rds("data-raw/model_data/final-data/ev_energy_consumption.rds")
energy_intensity <- read_rds("data-raw/model_data/final-data/energy_intensity.rds")
km_travelled <- read_rds("data-raw/model_data/final-data/km_traveled.rds")
fleet <- fleet_creator(.i_cars = 100)
usethis::use_data(
cost_curves,
targets_and_bau,
fuel_prices,
electricity_prices,
energy_consumption,
energy_intensity,
km_travelled,
fleet,
internal = FALSE,
overwrite = TRUE)
load_al()
document()
load_all()
